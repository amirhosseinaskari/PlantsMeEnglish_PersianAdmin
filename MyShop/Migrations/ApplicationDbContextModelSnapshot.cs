// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyShop.Data;

namespace MyShop.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Models.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedirectURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitlePage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("Models.AboutUsContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AboutId")
                        .HasColumnType("int");

                    b.Property<string>("AltTextForImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentOrder")
                        .HasColumnType("int");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AboutId");

                    b.ToTable("AboutUsContents");
                });

            modelBuilder.Entity("Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("MyUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("MyUserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("BuyNumber")
                        .HasColumnType("int");

                    b.Property<string>("CartBankNumber")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ClientRole")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsMobileConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastResendVerificationCode")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileVerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<byte>("NumberOfResendVerificationCode")
                        .HasColumnType("tinyint");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisteredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetPasswordToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalBuyValue")
                        .HasColumnType("float");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("BlogOrder")
                        .HasColumnType("int");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RateNumber")
                        .HasColumnType("float");

                    b.Property<string>("RedirectURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitlePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewNumber")
                        .HasColumnType("int");

                    b.HasKey("BlogId");

                    b.HasIndex("BlogCategoryId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Models.BlogCategory", b =>
                {
                    b.Property<int>("BlogCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogCategoryId");

                    b.ToTable("BlogCategories");

                    b.HasData(
                        new
                        {
                            BlogCategoryId = 1,
                            BlogOrder = 0,
                            Title = "Others"
                        });
                });

            modelBuilder.Entity("Models.BlogComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmitedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogComments");
                });

            modelBuilder.Entity("Models.BlogContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltTextForImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentOrder")
                        .HasColumnType("int");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogContents");
                });

            modelBuilder.Entity("Models.BlogPageBanner", b =>
                {
                    b.Property<int>("BlogPageBannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("TargetLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogPageBannerId");

                    b.ToTable("BlogPageBanners");
                });

            modelBuilder.Entity("Models.BlogReplyComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogCommentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFromAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SubmitedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogCommentId");

                    b.ToTable("BlogReplyComments");
                });

            modelBuilder.Entity("Models.BlogTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogTags");
                });

            modelBuilder.Entity("Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandOrder")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PutOnHomePage")
                        .HasColumnType("bit");

                    b.Property<string>("RedirectURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitlePage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanAddProduct")
                        .HasColumnType("bit");

                    b.Property<int>("CatOrder")
                        .HasColumnType("int");

                    b.Property<string>("CategoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasParent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<bool>("PutOnHomePage")
                        .HasColumnType("bit");

                    b.Property<string>("RedirectURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitlePage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<double>("DeliveryPrice")
                        .HasColumnType("float");

                    b.Property<bool>("IsSetDeliveryPrice")
                        .HasColumnType("bit");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 1,
                            StateName = "BARINGO",
                            Title = "TIATY"
                        },
                        new
                        {
                            Id = 2,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 1,
                            StateName = "BARINGO",
                            Title = "BARINGO NORTH"
                        },
                        new
                        {
                            Id = 3,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 1,
                            StateName = "BARINGO",
                            Title = "BARINGO CENTRAL"
                        },
                        new
                        {
                            Id = 4,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 1,
                            StateName = "BARINGO",
                            Title = "BARINGO SOUTH"
                        },
                        new
                        {
                            Id = 5,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 1,
                            StateName = "BARINGO",
                            Title = "MOGOTIO"
                        },
                        new
                        {
                            Id = 6,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 1,
                            StateName = "BARINGO",
                            Title = "ELDAMA RAVINE"
                        },
                        new
                        {
                            Id = 7,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 2,
                            StateName = "BOMET",
                            Title = "SOTIK"
                        },
                        new
                        {
                            Id = 8,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 2,
                            StateName = "BOMET",
                            Title = "CHEPALUNGU"
                        },
                        new
                        {
                            Id = 9,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 2,
                            StateName = "BOMET",
                            Title = "BOMET EAST"
                        },
                        new
                        {
                            Id = 10,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 2,
                            StateName = "BOMET",
                            Title = "BOMET CENTRAL"
                        },
                        new
                        {
                            Id = 11,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 2,
                            StateName = "BOMET",
                            Title = "KONOIN"
                        },
                        new
                        {
                            Id = 12,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 3,
                            StateName = "BUNGOMA",
                            Title = "MT. ELGON"
                        },
                        new
                        {
                            Id = 13,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 3,
                            StateName = "BUNGOMA",
                            Title = "SIRISIA"
                        },
                        new
                        {
                            Id = 14,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 3,
                            StateName = "BUNGOMA",
                            Title = "KABUCHAI"
                        },
                        new
                        {
                            Id = 15,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 3,
                            StateName = "BUNGOMA",
                            Title = "BUMULA"
                        },
                        new
                        {
                            Id = 16,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 3,
                            StateName = "BUNGOMA",
                            Title = "KANDUYI"
                        },
                        new
                        {
                            Id = 17,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 3,
                            StateName = "BUNGOMA",
                            Title = "WEBUYE EAST"
                        },
                        new
                        {
                            Id = 18,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 3,
                            StateName = "BUNGOMA",
                            Title = "WEBUYE WEST"
                        },
                        new
                        {
                            Id = 19,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 3,
                            StateName = "BUNGOMA",
                            Title = "KIMILILI"
                        },
                        new
                        {
                            Id = 20,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 3,
                            StateName = "BUNGOMA",
                            Title = "TONGAREN"
                        },
                        new
                        {
                            Id = 21,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 4,
                            StateName = "BUSIA",
                            Title = "TESO NORTH"
                        },
                        new
                        {
                            Id = 22,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 4,
                            StateName = "BUSIA",
                            Title = "TESO SOUTH"
                        },
                        new
                        {
                            Id = 23,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 4,
                            StateName = "BUSIA",
                            Title = "NAMBALE"
                        },
                        new
                        {
                            Id = 24,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 4,
                            StateName = "BUSIA",
                            Title = "MATAYOS"
                        },
                        new
                        {
                            Id = 25,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 4,
                            StateName = "BUSIA",
                            Title = "BUTULA"
                        },
                        new
                        {
                            Id = 26,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 4,
                            StateName = "BUSIA",
                            Title = "FUNYULA"
                        },
                        new
                        {
                            Id = 27,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 4,
                            StateName = "BUSIA",
                            Title = "BUDALANGI"
                        },
                        new
                        {
                            Id = 28,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 5,
                            StateName = "ELEGEYO-MARKAWET",
                            Title = "MARKAWET EAST"
                        },
                        new
                        {
                            Id = 29,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 5,
                            StateName = "ELEGEYO-MARKAWET",
                            Title = "KEIYO SOUTH"
                        },
                        new
                        {
                            Id = 30,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 5,
                            StateName = "ELEGEYO-MARKAWET",
                            Title = "KEIYO NORTH"
                        },
                        new
                        {
                            Id = 31,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 6,
                            StateName = "EMBU",
                            Title = "MANYATTA"
                        },
                        new
                        {
                            Id = 32,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 6,
                            StateName = "EMBU",
                            Title = "RUNYENJES"
                        },
                        new
                        {
                            Id = 33,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 6,
                            StateName = "EMBU",
                            Title = "MBEERE SOUTH"
                        },
                        new
                        {
                            Id = 34,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 6,
                            StateName = "EMBU",
                            Title = "MBEERE NORTH"
                        },
                        new
                        {
                            Id = 35,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 7,
                            StateName = "GARISSA",
                            Title = "GARISSA TOWNSHIP"
                        },
                        new
                        {
                            Id = 36,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 7,
                            StateName = "GARISSA",
                            Title = "BALAMBALA"
                        },
                        new
                        {
                            Id = 37,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 7,
                            StateName = "GARISSA",
                            Title = "LAGDERA"
                        },
                        new
                        {
                            Id = 38,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 7,
                            StateName = "GARISSA",
                            Title = "DADAAB"
                        },
                        new
                        {
                            Id = 39,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 7,
                            StateName = "GARISSA",
                            Title = "FAFI"
                        },
                        new
                        {
                            Id = 40,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 7,
                            StateName = "GARISSA",
                            Title = "IJARA"
                        },
                        new
                        {
                            Id = 41,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 8,
                            StateName = "HOME BAY",
                            Title = "KASIPUL"
                        },
                        new
                        {
                            Id = 42,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 8,
                            StateName = "HOME BAY",
                            Title = "KABONDO KASIPUL"
                        },
                        new
                        {
                            Id = 43,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 8,
                            StateName = "HOME BAY",
                            Title = "KARACHUNOYO"
                        },
                        new
                        {
                            Id = 44,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 8,
                            StateName = "HOME BAY",
                            Title = "RANGWE"
                        },
                        new
                        {
                            Id = 45,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 8,
                            StateName = "HOME BAY",
                            Title = "HOMA BAY TOWN"
                        },
                        new
                        {
                            Id = 46,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 8,
                            StateName = "HOME BAY",
                            Title = "NDHIWA"
                        },
                        new
                        {
                            Id = 47,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 8,
                            StateName = "HOME BAY",
                            Title = "MBITA"
                        },
                        new
                        {
                            Id = 48,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 8,
                            StateName = "HOME BAY",
                            Title = "SUBA"
                        },
                        new
                        {
                            Id = 49,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 9,
                            StateName = "ISIOLO",
                            Title = "ISIOLO NORHT"
                        },
                        new
                        {
                            Id = 50,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 9,
                            StateName = "ISIOLO",
                            Title = "ISIOLO SOUTH"
                        },
                        new
                        {
                            Id = 51,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 10,
                            StateName = "KAJIADO",
                            Title = "KAJIADO NORTH"
                        },
                        new
                        {
                            Id = 52,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 10,
                            StateName = "KAJIADO",
                            Title = "KAJIADO CENTRAL"
                        },
                        new
                        {
                            Id = 53,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 10,
                            StateName = "KAJIADO",
                            Title = "KAJIADO EAST"
                        },
                        new
                        {
                            Id = 54,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 10,
                            StateName = "KAJIADO",
                            Title = "KAJIADO WEST"
                        },
                        new
                        {
                            Id = 55,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 10,
                            StateName = "KAJIADO",
                            Title = "KAJIADO SOUTH"
                        },
                        new
                        {
                            Id = 56,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "LUGARI"
                        },
                        new
                        {
                            Id = 57,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "LIKUYANI"
                        },
                        new
                        {
                            Id = 58,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "MALAVA"
                        },
                        new
                        {
                            Id = 59,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "LURAMBI"
                        },
                        new
                        {
                            Id = 60,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "NAVAKHOLO"
                        },
                        new
                        {
                            Id = 61,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "MUMIAS WEST"
                        },
                        new
                        {
                            Id = 62,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "MUMIAS EAST"
                        },
                        new
                        {
                            Id = 63,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "MATUNGU"
                        },
                        new
                        {
                            Id = 64,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "BUTERE"
                        },
                        new
                        {
                            Id = 65,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "KHWISERO"
                        },
                        new
                        {
                            Id = 66,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "SHINYALU"
                        },
                        new
                        {
                            Id = 67,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 11,
                            StateName = "KAKAMEGA",
                            Title = "IKOLOMANI"
                        },
                        new
                        {
                            Id = 68,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 12,
                            StateName = "KERICHO",
                            Title = "KIPKELION EAST"
                        },
                        new
                        {
                            Id = 69,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 12,
                            StateName = "KERICHO",
                            Title = "KIPKELION WEST"
                        },
                        new
                        {
                            Id = 70,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 12,
                            StateName = "KERICHO",
                            Title = "AINAMOI"
                        },
                        new
                        {
                            Id = 71,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 12,
                            StateName = "KERICHO",
                            Title = "BURETI"
                        },
                        new
                        {
                            Id = 72,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 12,
                            StateName = "KERICHO",
                            Title = "BELGUT"
                        },
                        new
                        {
                            Id = 73,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 12,
                            StateName = "KERICHO",
                            Title = "SIGOWET/SOIN"
                        },
                        new
                        {
                            Id = 74,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "GATUNDU SOUTH"
                        },
                        new
                        {
                            Id = 75,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "GATUNDU NORTH"
                        },
                        new
                        {
                            Id = 76,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "JUJA"
                        },
                        new
                        {
                            Id = 77,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "THIKA TOWN"
                        },
                        new
                        {
                            Id = 78,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "RUIRU"
                        },
                        new
                        {
                            Id = 79,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "GITHUNGURI"
                        },
                        new
                        {
                            Id = 80,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "KIAMBU"
                        },
                        new
                        {
                            Id = 81,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "KIAMBAA"
                        },
                        new
                        {
                            Id = 82,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "KABETE"
                        },
                        new
                        {
                            Id = 83,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "KIKUYU"
                        },
                        new
                        {
                            Id = 84,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "LIMURU"
                        },
                        new
                        {
                            Id = 85,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 13,
                            StateName = "KIAMBU",
                            Title = "LARI"
                        },
                        new
                        {
                            Id = 86,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 14,
                            StateName = "KILIFI",
                            Title = "KILIFI NORTH"
                        },
                        new
                        {
                            Id = 87,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 14,
                            StateName = "KILIFI",
                            Title = "KILIFI SOUTH"
                        },
                        new
                        {
                            Id = 88,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 14,
                            StateName = "KILIFI",
                            Title = "KALOLENI"
                        },
                        new
                        {
                            Id = 89,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 14,
                            StateName = "KILIFI",
                            Title = "RABAI"
                        },
                        new
                        {
                            Id = 90,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 14,
                            StateName = "KILIFI",
                            Title = "GANZE"
                        },
                        new
                        {
                            Id = 91,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 14,
                            StateName = "KILIFI",
                            Title = "MALINDI"
                        },
                        new
                        {
                            Id = 92,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 14,
                            StateName = "KILIFI",
                            Title = "MAGARINI"
                        },
                        new
                        {
                            Id = 93,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 15,
                            StateName = "KIRINYAGA",
                            Title = "MWEA"
                        },
                        new
                        {
                            Id = 94,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 15,
                            StateName = "KIRINYAGA",
                            Title = "GICHUGU"
                        },
                        new
                        {
                            Id = 95,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 15,
                            StateName = "KIRINYAGA",
                            Title = "NDIA"
                        },
                        new
                        {
                            Id = 96,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 15,
                            StateName = "KIRINYAGA",
                            Title = "KIRINYAGA CENTRAL"
                        },
                        new
                        {
                            Id = 97,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 16,
                            StateName = "KISII",
                            Title = "BONCHARI"
                        },
                        new
                        {
                            Id = 98,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 16,
                            StateName = "KISII",
                            Title = "SOUTH MUGIRANGO"
                        },
                        new
                        {
                            Id = 99,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 16,
                            StateName = "KISII",
                            Title = "BOMACHOGE BORABU"
                        },
                        new
                        {
                            Id = 100,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 16,
                            StateName = "KISII",
                            Title = "BOBASI"
                        },
                        new
                        {
                            Id = 101,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 16,
                            StateName = "KISII",
                            Title = "BOMACHOGE CHACHE"
                        },
                        new
                        {
                            Id = 102,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 16,
                            StateName = "KISII",
                            Title = "NYARIBARI MASABA"
                        },
                        new
                        {
                            Id = 103,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 16,
                            StateName = "KISII",
                            Title = "NYARIBARI CHACHE"
                        },
                        new
                        {
                            Id = 104,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 16,
                            StateName = "KISII",
                            Title = "KITUTU CHACHE NORTH"
                        },
                        new
                        {
                            Id = 105,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 16,
                            StateName = "KISII",
                            Title = "KITUTU CHACHE SOUTH"
                        },
                        new
                        {
                            Id = 106,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 17,
                            StateName = "KISUMU",
                            Title = "KISUMU EAST"
                        },
                        new
                        {
                            Id = 107,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 17,
                            StateName = "KISUMU",
                            Title = "KISUMU WEST"
                        },
                        new
                        {
                            Id = 108,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 17,
                            StateName = "KISUMU",
                            Title = "KISUMU CENTRAL"
                        },
                        new
                        {
                            Id = 109,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 17,
                            StateName = "KISUMU",
                            Title = "SEME"
                        },
                        new
                        {
                            Id = 110,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 17,
                            StateName = "KISUMU",
                            Title = "NYANDO"
                        },
                        new
                        {
                            Id = 111,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 17,
                            StateName = "KISUMU",
                            Title = "MUHORONI"
                        },
                        new
                        {
                            Id = 112,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 17,
                            StateName = "KISUMU",
                            Title = "NYAKACH"
                        },
                        new
                        {
                            Id = 113,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 18,
                            StateName = "KITUI",
                            Title = "MWINGI NORTH"
                        },
                        new
                        {
                            Id = 114,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 18,
                            StateName = "KITUI",
                            Title = "MWINGI WEST"
                        },
                        new
                        {
                            Id = 115,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 18,
                            StateName = "KITUI",
                            Title = "MWINGI CENTRAL"
                        },
                        new
                        {
                            Id = 116,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 18,
                            StateName = "KITUI",
                            Title = "KITUI WEST"
                        },
                        new
                        {
                            Id = 117,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 18,
                            StateName = "KITUI",
                            Title = "KITUI RURAL"
                        },
                        new
                        {
                            Id = 118,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 18,
                            StateName = "KITUI",
                            Title = "KITUI CENTRAL"
                        },
                        new
                        {
                            Id = 119,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 18,
                            StateName = "KITUI",
                            Title = "KITUI EAST"
                        },
                        new
                        {
                            Id = 120,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 18,
                            StateName = "KITUI",
                            Title = "KITUI SOUTH"
                        },
                        new
                        {
                            Id = 121,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 19,
                            StateName = "KWALE",
                            Title = "MSAMBWENI"
                        },
                        new
                        {
                            Id = 122,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 19,
                            StateName = "KWALE",
                            Title = "LUNGA LUNGA"
                        },
                        new
                        {
                            Id = 123,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 19,
                            StateName = "KWALE",
                            Title = "MATUGA"
                        },
                        new
                        {
                            Id = 124,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 19,
                            StateName = "KWALE",
                            Title = "KINANGO"
                        },
                        new
                        {
                            Id = 125,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 20,
                            StateName = "LAIKIPIA",
                            Title = "LAIKIPIA WEST"
                        },
                        new
                        {
                            Id = 126,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 20,
                            StateName = "LAIKIPIA",
                            Title = "LAIKIPIA EAST"
                        },
                        new
                        {
                            Id = 127,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 20,
                            StateName = "LAIKIPIA",
                            Title = "LAIKIPIA NORTH"
                        },
                        new
                        {
                            Id = 128,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 21,
                            StateName = "LAMU",
                            Title = "LAMU EAST"
                        },
                        new
                        {
                            Id = 129,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 21,
                            StateName = "LAMU",
                            Title = "LAMU WEST"
                        },
                        new
                        {
                            Id = 130,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 22,
                            StateName = "MACHAKOS",
                            Title = "MASINGA"
                        },
                        new
                        {
                            Id = 131,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 22,
                            StateName = "MACHAKOS",
                            Title = "YATTA"
                        },
                        new
                        {
                            Id = 132,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 22,
                            StateName = "MACHAKOS",
                            Title = "KANGUNDO"
                        },
                        new
                        {
                            Id = 133,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 22,
                            StateName = "MACHAKOS",
                            Title = "MATUNGULU"
                        },
                        new
                        {
                            Id = 134,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 22,
                            StateName = "MACHAKOS",
                            Title = "KATHIANI"
                        },
                        new
                        {
                            Id = 135,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 22,
                            StateName = "MACHAKOS",
                            Title = "MAVOKO"
                        },
                        new
                        {
                            Id = 136,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 22,
                            StateName = "MACHAKOS",
                            Title = "MACHAKOS TOWN"
                        },
                        new
                        {
                            Id = 137,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 22,
                            StateName = "MACHAKOS",
                            Title = "MWALA"
                        },
                        new
                        {
                            Id = 138,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 23,
                            StateName = "MAKUENI",
                            Title = "MBOONI"
                        },
                        new
                        {
                            Id = 139,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 23,
                            StateName = "MAKUENI",
                            Title = "KILOME"
                        },
                        new
                        {
                            Id = 140,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 23,
                            StateName = "MAKUENI",
                            Title = "KAITI"
                        },
                        new
                        {
                            Id = 141,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 23,
                            StateName = "MAKUENI",
                            Title = "MAKUENI"
                        },
                        new
                        {
                            Id = 142,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 23,
                            StateName = "MAKUENI",
                            Title = "KIBWEZI WEST"
                        },
                        new
                        {
                            Id = 143,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 23,
                            StateName = "MAKUENI",
                            Title = "KIBWEZI EAST"
                        },
                        new
                        {
                            Id = 144,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 24,
                            StateName = "MANDERA",
                            Title = "MANDERA WEST"
                        },
                        new
                        {
                            Id = 145,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 24,
                            StateName = "MANDERA",
                            Title = "BANISSA"
                        },
                        new
                        {
                            Id = 146,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 24,
                            StateName = "MANDERA",
                            Title = "MANDERA NORTH"
                        },
                        new
                        {
                            Id = 147,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 24,
                            StateName = "MANDERA",
                            Title = "MANDERA SOUTH"
                        },
                        new
                        {
                            Id = 148,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 24,
                            StateName = "MANDERA",
                            Title = "MANDERA EAST"
                        },
                        new
                        {
                            Id = 149,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 24,
                            StateName = "MANDERA",
                            Title = "LAFEY"
                        },
                        new
                        {
                            Id = 150,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 25,
                            StateName = "MARSABIT",
                            Title = "MOYALE"
                        },
                        new
                        {
                            Id = 151,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 25,
                            StateName = "MARSABIT",
                            Title = "NORTH HORR"
                        },
                        new
                        {
                            Id = 152,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 25,
                            StateName = "MARSABIT",
                            Title = "SAKU"
                        },
                        new
                        {
                            Id = 153,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 25,
                            StateName = "MARSABIT",
                            Title = "LAISAMIS"
                        },
                        new
                        {
                            Id = 154,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 26,
                            StateName = "MERU",
                            Title = "IGEMBE SOUTH"
                        },
                        new
                        {
                            Id = 155,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 26,
                            StateName = "MERU",
                            Title = "IGEMBE CENTRAL"
                        },
                        new
                        {
                            Id = 156,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 26,
                            StateName = "MERU",
                            Title = "IGEMBE NORTH"
                        },
                        new
                        {
                            Id = 157,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 26,
                            StateName = "MERU",
                            Title = "TIGANIA WEST"
                        },
                        new
                        {
                            Id = 158,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 26,
                            StateName = "MERU",
                            Title = "TIGANIA EAST"
                        },
                        new
                        {
                            Id = 159,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 26,
                            StateName = "MERU",
                            Title = "NORTH IMENTI"
                        },
                        new
                        {
                            Id = 160,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 26,
                            StateName = "MERU",
                            Title = "BUURI"
                        },
                        new
                        {
                            Id = 161,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 26,
                            StateName = "MERU",
                            Title = "CENTRAL IMENTI"
                        },
                        new
                        {
                            Id = 162,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 26,
                            StateName = "MERU",
                            Title = "SOUTH IMENTI"
                        },
                        new
                        {
                            Id = 163,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 27,
                            StateName = "MIGORI",
                            Title = "RONGO"
                        },
                        new
                        {
                            Id = 164,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 27,
                            StateName = "MIGORI",
                            Title = "AWENDO"
                        },
                        new
                        {
                            Id = 165,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 27,
                            StateName = "MIGORI",
                            Title = "SUNA EAST"
                        },
                        new
                        {
                            Id = 166,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 27,
                            StateName = "MIGORI",
                            Title = "SUNA WEST"
                        },
                        new
                        {
                            Id = 167,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 27,
                            StateName = "MIGORI",
                            Title = "URIRI"
                        },
                        new
                        {
                            Id = 168,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 27,
                            StateName = "MIGORI",
                            Title = "NYATIKE"
                        },
                        new
                        {
                            Id = 169,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 27,
                            StateName = "MIGORI",
                            Title = "KURIA WEST"
                        },
                        new
                        {
                            Id = 170,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 27,
                            StateName = "MIGORI",
                            Title = "KURIA EAST"
                        },
                        new
                        {
                            Id = 171,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 28,
                            StateName = "MOMBASA",
                            Title = "CHANGAMWE"
                        },
                        new
                        {
                            Id = 172,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 28,
                            StateName = "MOMBASA",
                            Title = "JOMVU"
                        },
                        new
                        {
                            Id = 173,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 28,
                            StateName = "MOMBASA",
                            Title = "KISAUNI"
                        },
                        new
                        {
                            Id = 174,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 28,
                            StateName = "MOMBASA",
                            Title = "NYALI"
                        },
                        new
                        {
                            Id = 175,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 28,
                            StateName = "MOMBASA",
                            Title = "LIKONI"
                        },
                        new
                        {
                            Id = 176,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 28,
                            StateName = "MOMBASA",
                            Title = "MVITA"
                        },
                        new
                        {
                            Id = 177,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 29,
                            StateName = "MURANG'A",
                            Title = "KANGEMA"
                        },
                        new
                        {
                            Id = 178,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 29,
                            StateName = "MURANG'A",
                            Title = "MATHIOYA"
                        },
                        new
                        {
                            Id = 179,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 29,
                            StateName = "MURANG'A",
                            Title = "KIHARU"
                        },
                        new
                        {
                            Id = 180,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 29,
                            StateName = "MURANG'A",
                            Title = "KIGUMO"
                        },
                        new
                        {
                            Id = 181,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 29,
                            StateName = "MURANG'A",
                            Title = "MARAGWA"
                        },
                        new
                        {
                            Id = 182,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 29,
                            StateName = "MURANG'A",
                            Title = "KANDARA"
                        },
                        new
                        {
                            Id = 183,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 29,
                            StateName = "MURANG'A",
                            Title = "GATANGA"
                        },
                        new
                        {
                            Id = 184,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "WESTLANDS"
                        },
                        new
                        {
                            Id = 185,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "DAGORETTI NORTH"
                        },
                        new
                        {
                            Id = 186,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "DAGORETTI SOUTH"
                        },
                        new
                        {
                            Id = 187,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "LANGATA"
                        },
                        new
                        {
                            Id = 188,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "KIBRA"
                        },
                        new
                        {
                            Id = 189,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "ROYSAMBU"
                        },
                        new
                        {
                            Id = 190,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "KASARANI"
                        },
                        new
                        {
                            Id = 191,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "RUARAKA"
                        },
                        new
                        {
                            Id = 192,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "EMBAKASI SOUTH"
                        },
                        new
                        {
                            Id = 193,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "EMBAKASI NORTH"
                        },
                        new
                        {
                            Id = 194,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "EMBAKASI CENTRAL"
                        },
                        new
                        {
                            Id = 195,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "EMBAKASI EAST"
                        },
                        new
                        {
                            Id = 196,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "EMBAKASI WEST"
                        },
                        new
                        {
                            Id = 197,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "MAKADARA"
                        },
                        new
                        {
                            Id = 198,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "KAMUKUNJI"
                        },
                        new
                        {
                            Id = 199,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "STAREHE"
                        },
                        new
                        {
                            Id = 200,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 30,
                            StateName = "NAIROBI",
                            Title = "MATHARE"
                        },
                        new
                        {
                            Id = 201,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "MOLO"
                        },
                        new
                        {
                            Id = 202,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "NJORO"
                        },
                        new
                        {
                            Id = 203,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "NAIVASHA"
                        },
                        new
                        {
                            Id = 204,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "GILGIL"
                        },
                        new
                        {
                            Id = 205,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "KURESOI SOUTH"
                        },
                        new
                        {
                            Id = 206,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "KURESOI NORTH"
                        },
                        new
                        {
                            Id = 207,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "SUBUKIA"
                        },
                        new
                        {
                            Id = 208,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "RONGAI"
                        },
                        new
                        {
                            Id = 209,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "BAHATI"
                        },
                        new
                        {
                            Id = 210,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "NAKURU TOWN WEST"
                        },
                        new
                        {
                            Id = 211,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 31,
                            StateName = "NAKURU",
                            Title = "NAKURU TOWN EAST"
                        },
                        new
                        {
                            Id = 212,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 32,
                            StateName = "NANDI",
                            Title = "TINDERET"
                        },
                        new
                        {
                            Id = 213,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 32,
                            StateName = "NANDI",
                            Title = "ALDAI"
                        },
                        new
                        {
                            Id = 214,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 32,
                            StateName = "NANDI",
                            Title = "NANDI HILLS"
                        },
                        new
                        {
                            Id = 215,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 32,
                            StateName = "NANDI",
                            Title = "CHESUMEI"
                        },
                        new
                        {
                            Id = 216,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 32,
                            StateName = "NANDI",
                            Title = "EMGWEN"
                        },
                        new
                        {
                            Id = 217,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 32,
                            StateName = "NANDI",
                            Title = "MOSOP"
                        },
                        new
                        {
                            Id = 218,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 33,
                            StateName = "NAROK",
                            Title = "KILGORIS"
                        },
                        new
                        {
                            Id = 219,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 33,
                            StateName = "NAROK",
                            Title = "EMURUA DIKIRR"
                        },
                        new
                        {
                            Id = 220,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 33,
                            StateName = "NAROK",
                            Title = "NAROK NORTH"
                        },
                        new
                        {
                            Id = 221,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 33,
                            StateName = "NAROK",
                            Title = "NAROK EAST"
                        },
                        new
                        {
                            Id = 222,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 33,
                            StateName = "NAROK",
                            Title = "NAROK SOUTH"
                        },
                        new
                        {
                            Id = 223,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 33,
                            StateName = "NAROK",
                            Title = "NAROK WEST"
                        },
                        new
                        {
                            Id = 224,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 34,
                            StateName = "NYAMIRA",
                            Title = "KITUTU MASABA"
                        },
                        new
                        {
                            Id = 225,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 34,
                            StateName = "NYAMIRA",
                            Title = "WEST MUGIRANGO"
                        },
                        new
                        {
                            Id = 226,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 34,
                            StateName = "NYAMIRA",
                            Title = "NORTH MUGIRANGO"
                        },
                        new
                        {
                            Id = 227,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 34,
                            StateName = "NYAMIRA",
                            Title = "BORABU"
                        },
                        new
                        {
                            Id = 228,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 35,
                            StateName = "NYANDARUA",
                            Title = "KINANGOP"
                        },
                        new
                        {
                            Id = 229,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 35,
                            StateName = "NYANDARUA",
                            Title = "KIPIPIRI"
                        },
                        new
                        {
                            Id = 230,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 35,
                            StateName = "NYANDARUA",
                            Title = "OL KALOU"
                        },
                        new
                        {
                            Id = 231,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 35,
                            StateName = "NYANDARUA",
                            Title = "OL JOROK"
                        },
                        new
                        {
                            Id = 232,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 35,
                            StateName = "NYANDARUA",
                            Title = "NDARAGWA"
                        },
                        new
                        {
                            Id = 233,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 36,
                            StateName = "NYERI",
                            Title = "TETU"
                        },
                        new
                        {
                            Id = 234,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 36,
                            StateName = "NYERI",
                            Title = "KIENI"
                        },
                        new
                        {
                            Id = 235,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 36,
                            StateName = "NYERI",
                            Title = "MATHIRA"
                        },
                        new
                        {
                            Id = 236,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 36,
                            StateName = "NYERI",
                            Title = "OTHAYA"
                        },
                        new
                        {
                            Id = 237,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 36,
                            StateName = "NYERI",
                            Title = "MUKURWEINI"
                        },
                        new
                        {
                            Id = 238,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 36,
                            StateName = "NYERI",
                            Title = "NYERI TOWN"
                        },
                        new
                        {
                            Id = 239,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 37,
                            StateName = "SAMBURU",
                            Title = "SAMBURU WEST"
                        },
                        new
                        {
                            Id = 240,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 37,
                            StateName = "SAMBURU",
                            Title = "SAMBURU NORTH"
                        },
                        new
                        {
                            Id = 241,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 37,
                            StateName = "SAMBURU",
                            Title = "SAMBURU EAST"
                        },
                        new
                        {
                            Id = 242,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 38,
                            StateName = "SIAYA",
                            Title = "UGENYA"
                        },
                        new
                        {
                            Id = 243,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 38,
                            StateName = "SIAYA",
                            Title = "UGUNJA"
                        },
                        new
                        {
                            Id = 244,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 38,
                            StateName = "SIAYA",
                            Title = "ALEGO USONGA"
                        },
                        new
                        {
                            Id = 245,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 38,
                            StateName = "SIAYA",
                            Title = "GEM"
                        },
                        new
                        {
                            Id = 246,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 38,
                            StateName = "SIAYA",
                            Title = "BONDO"
                        },
                        new
                        {
                            Id = 247,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 38,
                            StateName = "SIAYA",
                            Title = "RARIEDA"
                        },
                        new
                        {
                            Id = 248,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 39,
                            StateName = "TAITA TAVETA",
                            Title = "TAVETA"
                        },
                        new
                        {
                            Id = 249,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 39,
                            StateName = "TAITA TAVETA",
                            Title = "WUNDANYI"
                        },
                        new
                        {
                            Id = 250,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 39,
                            StateName = "TAITA TAVETA",
                            Title = "MWATATE"
                        },
                        new
                        {
                            Id = 251,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 39,
                            StateName = "TAITA TAVETA",
                            Title = "VOI"
                        },
                        new
                        {
                            Id = 290,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 40,
                            StateName = "TANA RIVER",
                            Title = "GARSEN"
                        },
                        new
                        {
                            Id = 252,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 40,
                            StateName = "TANA RIVER",
                            Title = "GALOLE"
                        },
                        new
                        {
                            Id = 253,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 40,
                            StateName = "TANA RIVER",
                            Title = "BURA"
                        },
                        new
                        {
                            Id = 254,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 41,
                            StateName = "THARAKA-NITHI",
                            Title = "MAARA"
                        },
                        new
                        {
                            Id = 255,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 41,
                            StateName = "THARAKA-NITHI",
                            Title = "CHUKA/IGAMBANG'OMBE"
                        },
                        new
                        {
                            Id = 256,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 41,
                            StateName = "THARAKA-NITHI",
                            Title = "THARAKA"
                        },
                        new
                        {
                            Id = 257,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 42,
                            StateName = "TRANS NZOIA",
                            Title = "KWANZA"
                        },
                        new
                        {
                            Id = 258,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 42,
                            StateName = "TRANS NZOIA",
                            Title = "ENDEBESS"
                        },
                        new
                        {
                            Id = 259,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 42,
                            StateName = "TRANS NZOIA",
                            Title = "SABOTI"
                        },
                        new
                        {
                            Id = 260,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 42,
                            StateName = "TRANS NZOIA",
                            Title = "KIMININI"
                        },
                        new
                        {
                            Id = 261,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 42,
                            StateName = "TRANS NZOIA",
                            Title = "CHERANGANY"
                        },
                        new
                        {
                            Id = 262,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 43,
                            StateName = "TURKANA",
                            Title = "TURKANA NORTH"
                        },
                        new
                        {
                            Id = 263,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 43,
                            StateName = "TURKANA",
                            Title = "TURKANA WEST"
                        },
                        new
                        {
                            Id = 264,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 43,
                            StateName = "TURKANA",
                            Title = "TURKANA CENTRAL"
                        },
                        new
                        {
                            Id = 265,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 43,
                            StateName = "TURKANA",
                            Title = "LOIMA"
                        },
                        new
                        {
                            Id = 266,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 43,
                            StateName = "TURKANA",
                            Title = "TURKANA SOUTH"
                        },
                        new
                        {
                            Id = 267,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 43,
                            StateName = "TURKANA",
                            Title = "TURKANA EAST"
                        },
                        new
                        {
                            Id = 268,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 44,
                            StateName = "UASIN GISHU",
                            Title = "SOY"
                        },
                        new
                        {
                            Id = 269,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 44,
                            StateName = "UASIN GISHU",
                            Title = "TURBO"
                        },
                        new
                        {
                            Id = 270,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 44,
                            StateName = "UASIN GISHU",
                            Title = "MOIBEN"
                        },
                        new
                        {
                            Id = 271,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 44,
                            StateName = "UASIN GISHU",
                            Title = "AINABKOI"
                        },
                        new
                        {
                            Id = 272,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 44,
                            StateName = "UASIN GISHU",
                            Title = "KAPSERET"
                        },
                        new
                        {
                            Id = 273,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 44,
                            StateName = "UASIN GISHU",
                            Title = "KESSES"
                        },
                        new
                        {
                            Id = 274,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 45,
                            StateName = "VIHIGA",
                            Title = "VIHIGA"
                        },
                        new
                        {
                            Id = 275,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 45,
                            StateName = "VIHIGA",
                            Title = "SABATIA"
                        },
                        new
                        {
                            Id = 276,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 45,
                            StateName = "VIHIGA",
                            Title = "HAMISI"
                        },
                        new
                        {
                            Id = 277,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 45,
                            StateName = "VIHIGA",
                            Title = "LUANDA"
                        },
                        new
                        {
                            Id = 278,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 45,
                            StateName = "VIHIGA",
                            Title = "EMUHAYA"
                        },
                        new
                        {
                            Id = 279,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WAJIR",
                            Title = "WAJIR NORTH"
                        },
                        new
                        {
                            Id = 280,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WAJIR",
                            Title = "WAJIR EAST"
                        },
                        new
                        {
                            Id = 281,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WAJIR",
                            Title = "TARBAJ"
                        },
                        new
                        {
                            Id = 282,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WAJIR",
                            Title = "WAJIR WEST"
                        },
                        new
                        {
                            Id = 283,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WAJIR",
                            Title = "ELDAS"
                        },
                        new
                        {
                            Id = 284,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WAJIR",
                            Title = "WAJIR SOUTH"
                        },
                        new
                        {
                            Id = 285,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WEST POKOT",
                            Title = "KAPENGURIA"
                        },
                        new
                        {
                            Id = 286,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WEST POKOT",
                            Title = "SIGOR"
                        },
                        new
                        {
                            Id = 287,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WEST POKOT",
                            Title = "KACHELIBA"
                        },
                        new
                        {
                            Id = 288,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WEST POKOT",
                            Title = "POKOT SOUTH"
                        },
                        new
                        {
                            Id = 289,
                            DeliveryId = 1,
                            DeliveryPrice = -1.0,
                            IsSetDeliveryPrice = false,
                            StateId = 46,
                            StateName = "WEST POKOT",
                            Title = "MARAKWET WEST"
                        });
                });

            modelBuilder.Entity("Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmitedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Models.ContactMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Models.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Aparat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleMap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleMapLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedirectURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telegram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitlePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsAppNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YouTube")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("Models.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanSendingToAllCity")
                        .HasColumnType("bit");

                    b.Property<int>("CityPriceStatus")
                        .HasColumnType("int");

                    b.Property<bool>("HasMinAmountForFreeDelivery")
                        .HasColumnType("bit");

                    b.Property<double>("MinAmountForFreeDelivery")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Deliveries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanSendingToAllCity = true,
                            CityPriceStatus = 1,
                            HasMinAmountForFreeDelivery = false,
                            MinAmountForFreeDelivery = 0.0
                        });
                });

            modelBuilder.Entity("Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActivationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountTarget")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForAllCustomers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForMinBuyNumber")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForMinBuyValue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("MinBuyNumber")
                        .HasColumnType("int");

                    b.Property<double>("MinBuyValue")
                        .HasColumnType("float");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<byte>("Percent")
                        .HasColumnType("tinyint");

                    b.Property<int>("RemainingNumber")
                        .HasColumnType("int");

                    b.Property<int>("UsedNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Models.FAQ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FAQs");
                });

            modelBuilder.Entity("Models.FavoritProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("FavoritProduct");
                });

            modelBuilder.Entity("Models.HomeBanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("TargetLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomeBanners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Order = 0
                        },
                        new
                        {
                            Id = 2,
                            Order = 1
                        },
                        new
                        {
                            Id = 3,
                            Order = 2
                        },
                        new
                        {
                            Id = 4,
                            Order = 3
                        },
                        new
                        {
                            Id = 5,
                            Order = 4
                        });
                });

            modelBuilder.Entity("Models.HomePage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FooterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Has24Support")
                        .HasColumnType("bit");

                    b.Property<bool>("HasFastDeliveryOption")
                        .HasColumnType("bit");

                    b.Property<bool>("HasLocalPaymentOption")
                        .HasColumnType("bit");

                    b.Property<bool>("HasOriginalWarranty")
                        .HasColumnType("bit");

                    b.Property<string>("InstagramAPI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedirectURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ShowHomeBanners")
                        .HasColumnType("bit");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitlePage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomePage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Has24Support = true,
                            HasFastDeliveryOption = true,
                            HasLocalPaymentOption = true,
                            HasOriginalWarranty = true,
                            ShowHomeBanners = false
                        });
                });

            modelBuilder.Entity("Models.HomeSliderImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlternativeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HomePageId")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImageOrder")
                        .HasColumnType("int");

                    b.Property<string>("TargetLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HomePageId");

                    b.ToTable("HomeSliderImages");
                });

            modelBuilder.Entity("Models.MobileHomeSliderImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlternativeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HomePageId")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImageOrder")
                        .HasColumnType("int");

                    b.Property<string>("TargetLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HomePageId");

                    b.ToTable("MobileHomeSliderImages");
                });

            modelBuilder.Entity("Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("LinkText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notification");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsPublished = false
                        });
                });

            modelBuilder.Entity("Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShoppingId")
                        .HasColumnType("int");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("SubProductVariationIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AuthotityGuarantee")
                        .HasColumnType("bit");

                    b.Property<double>("BasePrice")
                        .HasColumnType("float");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("DiscountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasFreeDelivery")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProductSaved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("LocalPayment")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfUserRater")
                        .HasColumnType("int");

                    b.Property<double>("RateNumber")
                        .HasColumnType("float");

                    b.Property<string>("RedirectURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReturnMonyGuarantee")
                        .HasColumnType("bit");

                    b.Property<int>("SellNumber")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitlePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VarNumber")
                        .HasColumnType("int");

                    b.Property<int>("ViewNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Models.ProductImage", b =>
                {
                    b.Property<int>("ProductImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImageOrder")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Models.ProductOption", b =>
                {
                    b.Property<int>("ProductOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OptionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductOptionId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOptions");
                });

            modelBuilder.Entity("Models.ProductTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductTags");
                });

            modelBuilder.Entity("Models.ProductTechnicalContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltTextForImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContentOrder")
                        .HasColumnType("int");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductTechnicalContents");
                });

            modelBuilder.Entity("Models.ProductVariation", b =>
                {
                    b.Property<int>("ProductVariationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasDifferentPrice")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductVariationId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariations");
                });

            modelBuilder.Entity("Models.RelatedCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("RelatedCategories");
                });

            modelBuilder.Entity("Models.ReplyComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BlogCommentId")
                        .HasColumnType("int");

                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFromAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SubmitedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogCommentId");

                    b.HasIndex("CommentId");

                    b.ToTable("ReplyComments");
                });

            modelBuilder.Entity("Models.ReplyTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("ReplyTickets");
                });

            modelBuilder.Entity("Models.SEOSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FavIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleAnalytics")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleSearchConsole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<string>("SiteMap")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SEOSettings");
                });

            modelBuilder.Entity("Models.Shopping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BasePrice")
                        .HasColumnType("float");

                    b.Property<double>("DeliveryPrice")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<double>("DiscountPrice")
                        .HasColumnType("float");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasLocalPaymentOption")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocalPayment")
                        .HasColumnType("bit");

                    b.Property<string>("OrderIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverMobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("TracingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shoppings");
                });

            modelBuilder.Entity("Models.SpecialDiscount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActivationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("BasePrice")
                        .HasColumnType("float");

                    b.Property<double>("DiscountPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SellNumber")
                        .HasColumnType("int");

                    b.Property<int>("ViewNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("SpecialDiscount");
                });

            modelBuilder.Entity("Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeliveryId = 1,
                            StateName = "BARINGO"
                        },
                        new
                        {
                            Id = 2,
                            DeliveryId = 1,
                            StateName = "BOMET"
                        },
                        new
                        {
                            Id = 3,
                            DeliveryId = 1,
                            StateName = "BUNGOMA"
                        },
                        new
                        {
                            Id = 4,
                            DeliveryId = 1,
                            StateName = "BUSIA"
                        },
                        new
                        {
                            Id = 5,
                            DeliveryId = 1,
                            StateName = "ELEGEYO-MARAKWET"
                        },
                        new
                        {
                            Id = 6,
                            DeliveryId = 1,
                            StateName = "EMBU"
                        },
                        new
                        {
                            Id = 7,
                            DeliveryId = 1,
                            StateName = "GARISSA"
                        },
                        new
                        {
                            Id = 8,
                            DeliveryId = 1,
                            StateName = "HOMA BAY"
                        },
                        new
                        {
                            Id = 9,
                            DeliveryId = 1,
                            StateName = "ISIOLO"
                        },
                        new
                        {
                            Id = 10,
                            DeliveryId = 1,
                            StateName = "KAJIADO"
                        },
                        new
                        {
                            Id = 11,
                            DeliveryId = 1,
                            StateName = "KAKAMEGA"
                        },
                        new
                        {
                            Id = 12,
                            DeliveryId = 1,
                            StateName = "KERICHO"
                        },
                        new
                        {
                            Id = 13,
                            DeliveryId = 1,
                            StateName = "KIAMBU"
                        },
                        new
                        {
                            Id = 14,
                            DeliveryId = 1,
                            StateName = "KILIFI"
                        },
                        new
                        {
                            Id = 15,
                            DeliveryId = 1,
                            StateName = "KIRINYAGA"
                        },
                        new
                        {
                            Id = 16,
                            DeliveryId = 1,
                            StateName = "KISII"
                        },
                        new
                        {
                            Id = 17,
                            DeliveryId = 1,
                            StateName = "KISUMU"
                        },
                        new
                        {
                            Id = 18,
                            DeliveryId = 1,
                            StateName = "KITUI"
                        },
                        new
                        {
                            Id = 19,
                            DeliveryId = 1,
                            StateName = "KWALE"
                        },
                        new
                        {
                            Id = 20,
                            DeliveryId = 1,
                            StateName = "LAIKIPIA"
                        },
                        new
                        {
                            Id = 21,
                            DeliveryId = 1,
                            StateName = "LAMU"
                        },
                        new
                        {
                            Id = 22,
                            DeliveryId = 1,
                            StateName = "MACHAKOS"
                        },
                        new
                        {
                            Id = 23,
                            DeliveryId = 1,
                            StateName = "MAKUENI"
                        },
                        new
                        {
                            Id = 24,
                            DeliveryId = 1,
                            StateName = "MANDERA"
                        },
                        new
                        {
                            Id = 25,
                            DeliveryId = 1,
                            StateName = "MARSABIT"
                        },
                        new
                        {
                            Id = 26,
                            DeliveryId = 1,
                            StateName = "MERU"
                        },
                        new
                        {
                            Id = 27,
                            DeliveryId = 1,
                            StateName = "MIGORI"
                        },
                        new
                        {
                            Id = 28,
                            DeliveryId = 1,
                            StateName = "MOMBASA"
                        },
                        new
                        {
                            Id = 29,
                            DeliveryId = 1,
                            StateName = "MURANG'A"
                        },
                        new
                        {
                            Id = 30,
                            DeliveryId = 1,
                            StateName = "NAIROBI"
                        },
                        new
                        {
                            Id = 31,
                            DeliveryId = 1,
                            StateName = "NAKURU"
                        },
                        new
                        {
                            Id = 32,
                            DeliveryId = 1,
                            StateName = "NANDI"
                        },
                        new
                        {
                            Id = 33,
                            DeliveryId = 1,
                            StateName = "NAROK"
                        },
                        new
                        {
                            Id = 34,
                            DeliveryId = 1,
                            StateName = "NYAMIRA"
                        },
                        new
                        {
                            Id = 35,
                            DeliveryId = 1,
                            StateName = "NYANDARUA"
                        },
                        new
                        {
                            Id = 36,
                            DeliveryId = 1,
                            StateName = "NYERI"
                        },
                        new
                        {
                            Id = 37,
                            DeliveryId = 1,
                            StateName = "SAMBURU"
                        },
                        new
                        {
                            Id = 38,
                            DeliveryId = 1,
                            StateName = "SIAYA"
                        },
                        new
                        {
                            Id = 39,
                            DeliveryId = 1,
                            StateName = "TITA TAVETA"
                        },
                        new
                        {
                            Id = 40,
                            DeliveryId = 1,
                            StateName = "TANA RIVER"
                        },
                        new
                        {
                            Id = 41,
                            DeliveryId = 1,
                            StateName = "THARAKA-NTHI"
                        },
                        new
                        {
                            Id = 42,
                            DeliveryId = 1,
                            StateName = "TRANS ANZOIA"
                        },
                        new
                        {
                            Id = 43,
                            DeliveryId = 1,
                            StateName = "TURKANA"
                        },
                        new
                        {
                            Id = 44,
                            DeliveryId = 1,
                            StateName = "UASIN GISHU"
                        },
                        new
                        {
                            Id = 45,
                            DeliveryId = 1,
                            StateName = "VIHIGA"
                        },
                        new
                        {
                            Id = 46,
                            DeliveryId = 1,
                            StateName = "WAJIR"
                        },
                        new
                        {
                            Id = 47,
                            DeliveryId = 1,
                            StateName = "WEST POKOT"
                        });
                });

            modelBuilder.Entity("Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("MyIdInCatTable")
                        .HasColumnType("int");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("Models.SubProductVariation", b =>
                {
                    b.Property<int>("SubProductVariationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasDefinedDifferentPrice")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductVariationId")
                        .HasColumnType("int");

                    b.Property<string>("ProductVariationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.HasKey("SubProductVariationId");

                    b.HasIndex("ProductVariationId");

                    b.ToTable("SubProductVariations");
                });

            modelBuilder.Entity("Models.Term", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedirectURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitlePage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Terms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Terms of world wide e-commerce"
                        });
                });

            modelBuilder.Entity("Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketStatus")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.AboutUsContent", b =>
                {
                    b.HasOne("Models.About", "About")
                        .WithMany("AboutUsContents")
                        .HasForeignKey("AboutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Address", b =>
                {
                    b.HasOne("Models.ApplicationUser", "MyUser")
                        .WithMany("MyAddresses")
                        .HasForeignKey("MyUserId");
                });

            modelBuilder.Entity("Models.Blog", b =>
                {
                    b.HasOne("Models.BlogCategory", "BlogCategory")
                        .WithMany("Blogs")
                        .HasForeignKey("BlogCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.BlogComment", b =>
                {
                    b.HasOne("Models.Blog", "Blog")
                        .WithMany()
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.BlogContent", b =>
                {
                    b.HasOne("Models.Blog", "Blog")
                        .WithMany("BlogContents")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.BlogReplyComment", b =>
                {
                    b.HasOne("Models.BlogComment", "BlogComment")
                        .WithMany()
                        .HasForeignKey("BlogCommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.BlogTags", b =>
                {
                    b.HasOne("Models.Blog", "Blog")
                        .WithMany("BlogTags")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.City", b =>
                {
                    b.HasOne("Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Comment", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.FavoritProduct", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.HomeSliderImages", b =>
                {
                    b.HasOne("Models.HomePage", "HomePage")
                        .WithMany("HomeSliderImages")
                        .HasForeignKey("HomePageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.MobileHomeSliderImages", b =>
                {
                    b.HasOne("Models.HomePage", "HomePage")
                        .WithMany()
                        .HasForeignKey("HomePageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Product", b =>
                {
                    b.HasOne("Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.ProductImage", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.ProductOption", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.ProductTag", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany("Tags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.ProductTechnicalContent", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany("TechnicalContents")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.ProductVariation", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany("ProductVariations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.RelatedCategory", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.ReplyComment", b =>
                {
                    b.HasOne("Models.BlogComment", null)
                        .WithMany("ReplyComment")
                        .HasForeignKey("BlogCommentId");

                    b.HasOne("Models.Comment", "Comment")
                        .WithMany("ReplyComment")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.ReplyTicket", b =>
                {
                    b.HasOne("Models.Ticket", "Ticket")
                        .WithMany("ReplyTickets")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.SpecialDiscount", b =>
                {
                    b.HasOne("Models.Product", "Product")
                        .WithMany("SpecialDiscount")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.SubCategory", b =>
                {
                    b.HasOne("Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.SubProductVariation", b =>
                {
                    b.HasOne("Models.ProductVariation", "ProductVariation")
                        .WithMany("SubProductVariations")
                        .HasForeignKey("ProductVariationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Ticket", b =>
                {
                    b.HasOne("Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
