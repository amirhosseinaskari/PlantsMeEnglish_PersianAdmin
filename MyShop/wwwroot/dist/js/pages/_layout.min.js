export function persianNumberParse() { window.addEventListener("resize", () => { let a = document.querySelectorAll(".my-uk-sticky"); a.forEach(a => { 600 > window.innerWidth ? a.removeAttribute("uk-sticky") : a.setAttribute("uk-sticky", "bottom:true;offset:100") }) }, !1); let a = document.querySelectorAll(".my-uk-sticky"); a.forEach(a => { 600 > window.innerWidth ? a.removeAttribute("uk-sticky") : a.setAttribute("uk-sticky", "bottom:true;offset:100") }) } export function convertPersianNumbersToEnglish() { let a = a => { if (!a) return !1; let b = { "۰": 0, "۱": 1, "۲": 2, "۳": 3, "۴": 4, "۵": 5, "۶": 6, "۷": 7, "۸": 8, "۹": 9 }, c = a.match(/[۰۱۲۳۴۵۶۷۸۹]/g); if (null !== c && 0 !== c.length) for (let d = 0; d < c.length; d++)a = a.replace(c[d], b[c[d]]); return a }, b = document.querySelector("#login--modal"); if (b) { let c = b.querySelector(".submit-button"); c && c.addEventListener("click", () => { let c = b.querySelector("input[name=\"Input.Mobile\"]"), d = c.value; c.value = a(d) }, !1) } let c = document.querySelector("#register--modal"); if (c) { let d = c.querySelector(".submit-button"); d && d.addEventListener("click", () => { let c = b.querySelector("input[name=\"Input.Mobile\"]"), d = c.value; c.value = a(d) }, !1) } } export async function topMenuFunction() { function a() { let a = document.querySelector("#category-dropdown-trigger .chevron-down-icon"); a.classList.toggle("open") } let b = document.querySelector("#category-dropdown-content"); b.addEventListener("beforeshow", function () { a(this) }, !1), b.addEventListener("beforehide", function () { a(this) }, !1); let c = document.querySelector("#menu-second-section"); c.addEventListener("active", () => { c.classList.add("uk-box-shadow-small") }, !1), c.addEventListener("inactive", () => { c.classList.remove("uk-box-shadow-small") }, !1); let d = document.querySelector("#mobile-menu-second-section"); d.addEventListener("active", () => { d.classList.add("uk-box-shadow-small") }, !1), d.addEventListener("inactive", () => { d.classList.remove("uk-box-shadow-small") }, !1) } export async function mobileMenuCategoryNavigation() { let a = document.querySelectorAll(".category-navigation"); a.forEach(a => { a.addEventListener("click", b => { b.stopPropagation(), b.preventDefault(); let c = a.getAttribute("href"), d = new Promise(a => { let b = document.querySelectorAll(".mobile-sub-category-list-items"); b.forEach(a => { a.classList.remove("active") }), a() }); d.then(() => { let a = document.querySelector(c); null !== a && (a.classList.add("active"), document.querySelector("#main-mobile-menu").classList.remove("active")) }) }, !1) }); let b = document.querySelectorAll(".back-category-navigation"); b.forEach(a => { a.addEventListener("click", b => { b.stopPropagation(), b.preventDefault(); let c = a.getAttribute("href"), d = document.querySelector(c); null === d ? (a.parentElement.classList.remove("active"), document.querySelector("#main-mobile-category-list").classList.add("active")) : (d.classList.add("active"), a.parentElement.classList.remove("active")) }, !1) }); let c = document.querySelector("#main-back-mobile-menu"); c.addEventListener("click", a => { a.stopPropagation(), a.preventDefault(), document.querySelector("#main-mobile-category-list").classList.remove("active"), document.querySelector("#main-mobile-menu").classList.add("active") }, !1) } export async function menuCategoryNavigation() { let a = document.querySelectorAll(".desktop-category-navigation"); a.forEach(a => { a.addEventListener("click", b => { b.stopPropagation(), b.preventDefault(); let c = a.getAttribute("href"), d = new Promise(a => { let b = document.querySelectorAll(".sub-category-list"); b.forEach(a => { a.classList.remove("active") }), a() }); d.then(() => { let a = document.querySelector(c); null !== a && (a.classList.add("active"), document.querySelector("#main-category-list").classList.remove("active")) }) }, !1) }); let b = document.querySelectorAll(".desktop-back-category-navigation"); b.forEach(a => { a.addEventListener("click", b => { b.stopPropagation(), b.preventDefault(); let c = a.getAttribute("href"), d = document.querySelector(c); null === d ? (console.log("false"), a.parentElement.classList.remove("active"), document.querySelector("#main-category-list").classList.add("active")) : (console.log("true"), d.classList.add("active"), console.log(d), a.parentElement.classList.remove("active")) }, !1) }) } export async function passwordVisible() { let a = document.querySelectorAll(".visible-password-icon"); a.forEach(a => { a.addEventListener("click", b => { b.stopPropagation(), b.preventDefault(); let c = a.querySelector("img"), d = a.nextElementSibling, e = d.type; if ("password" === e) { d.type = "text"; let a = c.src, b = c.getAttribute("data-second-src"); c.src = b, c.setAttribute("data-second-src", a) } else { d.type = "password"; let a = c.src, b = c.getAttribute("data-second-src"); c.src = b, c.setAttribute("data-second-src", a) } }, !1) }) } export function setComma(a) { function b(a) { return !("number" != typeof a || isNaN(a)) || (a = (a || "").toString().trim(), a && !isNaN(a)) } return function (a) { if (("undefined" == typeof a || null === a) && (a = ""), a = a.toString(), !b(a)) return a; var c = a.split("."); return c[0] = c[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","), c.join(".") }(a) } export async function ajaxLoader(a, b, c, d, e, f, g) { if (g) { let a = document.createElement("DIV"); a.className += "page-loading active"; let b = document.createElement("SPAN"); b.innerHTML = "Loading ....", b.className += "dana-font white-text fontsize-20 mobile-fontsize-16 font-weight-600 margin-bottom-30", a.setAttribute("dir", "ltr"); let c = document.createElement("DIV"); c.className += "page-loading-animation"; let d = c.cloneNode(!0); a.appendChild(b); let e = document.createElement("DIV"); e.className += "d-flex justify-content-center align-items-center", e.appendChild(c), e.appendChild(d), a.appendChild(e), document.querySelector("body").appendChild(a) } else { let a = document.createElement("DIV"), b = document.createElement("DIV"); a.classList.add("progress"), b.classList.add("indeterminate"), a.appendChild(b), document.querySelector("body").appendChild(a) } let h = new Promise(e => { let h = new XMLHttpRequest; h.open(a, b), h.onerror = d, h.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), h.onreadystatechange = function () { if (4 == this.readyState && 200 == this.status) { let a = this.responseText; if (persianNumberParse(), g) { let a = document.querySelector(".page-loading"); a.remove() } else document.querySelector(".progress").remove(); f ? (document.querySelector(f).innerHTML = a, e()) : e(a) } }, h.send(c) }); return h.then(a => (e(a), a)) } export function scrollToTop(a) { function b(f) { if (null !== e) { if (d += Math.PI * (f - e) / a, d >= Math.PI) return document.scrollingElement.scrollTop = 0; document.scrollingElement.scrollTop = c + c * Math.cos(d) } e = f, window.requestAnimationFrame(b) } if (0 === document.scrollingElement.scrollTop) return; const c = document.scrollingElement.scrollTop / 2; let d = 0, e = null; window.requestAnimationFrame(b) } export function scrollToElement(a, b) { try { a.scrollIntoView({ behavior: "smooth", block: b }) } catch (c) { "start" === b ? a.scrollIntoView(!0) : a.scrollIntoView(!1) } } export function lazyLoading() { (async () => { if ("loading" in HTMLImageElement.prototype) { const a = document.querySelectorAll("img.lazyload"); a.forEach(a => { a.src = a.dataset.src; let b = a.getAttribute("data-srcset"); b && a.setAttribute("srcset", b), a.classList.remove("lazyload"), a.classList.add("lazier") }) } else { const a = document.createElement("script"); a.src = "/js/lazysizes.min.js", document.body.appendChild(a) } })() } export async function clickButonEffect() { let a = document.querySelectorAll(".click-button-effect"); return !!a && void a.forEach(a => { a.addEventListener("mousedown", () => { a.classList.add("active-effect") }, !1), a.addEventListener("mouseup", () => { a.classList.remove("active-effect") }, !1), a.addEventListener("touchstart", () => { a.classList.add("active-effect") }, !1), a.addEventListener("touchend", () => { a.classList.remove("active-effect") }, !1) }) } export async function preventWriteString() { let a = document.querySelectorAll("input.type-number"); return !!a && void a.forEach(a => { a.addEventListener("keydown", a => { let b = a.keyCode || a.which; if (9 !== b && 8 !== b && (48 > b || 57 < b) && !(96 <= b && 105 >= b)) return a.preventDefault(), a.stopPropagation(), !1 }, !1) }) } export async function productSaving() { let a = a => { console.log(a) }, b = async b => { let c = b.getAttribute("data-id"), d = await ajaxLoader("POST", "/FavoritProduct/AddToMyFavorit", `productId=${c}`, a, a => { a && (UIkit.notification({ message: "<span class=\"margin-right-10 position-relative\" uk-icon=\"icon:bell;ratio:1.2\"></span><span class=\"dana-font fontsize-14\" dir=\"ltr\">Added To Your Favorites</span>", status: "primary", pos: "top-center", timeout: 3e3 }), b.classList.add("saved-product")) }, null, !1) }, c = async b => { let c = b.getAttribute("data-id"); await ajaxLoader("POST", "/FavoritProduct/RemoveFromMyFavorit", `productId=${c}`, a, a => { a && (UIkit.notification({ message: "<span class=\"margin-right-10 position-relative\" uk-icon=\"icon:bell;ratio:1.2\"></span><span class=\"dana-font fontsize-14\" dir=\"ltr\">Removed From Your Favorites</span>", status: "primary", pos: "top-center", timeout: 3e3 }), b.classList.remove("saved-product")) }, null, !1) }, d = document.querySelectorAll(".product-saving"); return !!d && void d.forEach(a => { a.addEventListener("click", async d => { d.stopPropagation(), d.preventDefault(), a.classList.contains("saved-product") ? await c(a) : await b(a) }, !1) }) }