(async function () { let a = await import("./_layout.js"); a.topMenuFunction(), a.mobileMenuCategoryNavigation(), a.menuCategoryNavigation(), a.passwordVisible(), a.productSaving(), a.convertPersianNumbersToEnglish() })(); import { setComma, ajaxLoader, persianNumberParse, lazyLoading } from "./_layout.js"; lazyLoading(), async function () { let a = await import("../components/_wavebutton.js"); a.waveButton(), a.ripple() }(), async function () { let a = await import("../components/_productcard.js"); a.default.return }(); import { fadeIn, fadeOut } from "../components/_fade.js"; let productImageContainer = document.querySelector(".product-image__image-container"); productImageContainer.addEventListener("mousemove", a => { let b = productImageContainer.querySelector(".magnifier-glass-box"), c = productImageContainer.getBoundingClientRect(), d = .03 * window.innerWidth, e = a.clientX - c.left - d / 2, f = a.clientY - c.top - d / 2; b.style.cssText = `transform:translate(${e}px,${f}px);display:unset`; let g = document.querySelector(".product-image__big-image-container"), h = productImageContainer.querySelector("img").src; g.style.cssText = `display:block;background-image:url('${h}');background-position:${2.7 * (-1 * e)}px ${2.7 * (-1 * f)}px`, console.log(h) }, !1), productImageContainer.addEventListener("mouseenter", () => { let a = productImageContainer.querySelector("img").getAttribute("data-url"), b = document.querySelector(".product-image__big-image-container"); b.classList.remove("fadeout"), b.style.cssText = `display:block;background-image:url('${a}')` }, !1), productImageContainer.addEventListener("mouseleave", () => { let a = productImageContainer.querySelector(".magnifier-glass-box"); a.style.cssText = "display:none"; let b = document.querySelector(".product-image__big-image-container"); b.classList.add("fadeout"), fadeOut(b) }, !1); let otherProductImages = document.querySelector(".product-image__other-images").querySelectorAll("a:not(.uk-slidenav)"); otherProductImages.forEach(a => { a.addEventListener("click", b => { b.stopPropagation(), b.preventDefault(); let c = a.getAttribute("data-url"), d = a.getAttribute("data-src"), e = a.getAttribute("data-srcset"), f = productImageContainer.querySelector("img"); f.src = d, f.setAttribute("src", d), f.setAttribute("srcset", e), f.setAttribute("data-url", c); let g = document.querySelector(".product-image__other-images").querySelectorAll("a"); g.forEach(a => { a.classList.remove("active"), a.classList.remove("uk-disabled") }), a.classList.add("active"), a.classList.add("uk-disabled") }, !1) }); let mobileProductImageContainer = document.querySelector(".product-image__image-container--mobile"), mobileImage = mobileProductImageContainer.querySelector("a"); mobileImage.addEventListener("click", a => { a.stopPropagation(), a.preventDefault(); let b = document.querySelector(".product-image__other-images--mobile").querySelector("a:not(.active)"); b.click() }, !1); function updateProductPrice() { let a = document.querySelector(".product-variation-list"); if (null === a) return !1; let b = a.querySelectorAll("input[type=\"radio\"]:checked"), c = document.querySelector(".addneworder-form__ids-container"); c.innerHTML = ""; let d = document.querySelector(".product-price"), e = +d.getAttribute("data-discount-price"), f = []; b.forEach(a => { let b = a.value, d = document.createElement("INPUT"); d.classList.add("d-none"), d.setAttribute("name", "ids"), d.value = b, d.setAttribute("type", "hidden"), c.appendChild(d); let g = a.getAttribute("data-price"), h = a.getAttribute("data-has-difprice"); "true" === h.toLowerCase() && f.push(+g - e) }), console.log(f), 0 < f.length && (d.innerHTML = setComma(Math.max(...f))) } updateProductPrice(), async function () { let a = document.querySelector(".product-variation-list"); if (null === a) return !1; let b = a.querySelectorAll("input[type=\"radio\"]"); b.forEach(a => { a.addEventListener("change", () => { b.forEach(a => { let b = a.parentElement; a.checked ? b.classList.add("sub-product-variation--selected") : b.classList.remove("sub-product-variation--selected") }), updateProductPrice() }, !1) }) }(); function productCommentsPagination() { let a = document.querySelector("#product-comment-list__pageination-buttons-container"); if (a) { let b = a.querySelectorAll(".pagination--button"), c = function () { return window.scrollTo({ top: document.querySelector("#comment-and-details").offsetTop - 120, behavior: "smooth" }), productCommentsPagination(), addNewProductComment(), addNewReplyComment(), !0 }; b.forEach(b => { b.addEventListener("click", async d => { d.preventDefault(), d.stopPropagation(); let e = a.getAttribute("data-product-id"), f = b.getAttribute("data-page-index"); await ajaxLoader("POST", "/Products/ProductCommentList", `productId=${e}&pageIndex=${f}`, errorHandling, c, "#product-main-content", !0) }, !1) }) } } async function addNewProductComment() { let a = document.querySelector(".product-stars-container"); if (!a) return !1; let b = a.querySelectorAll("input[name=\"star\"]"); b.forEach(b => { b.addEventListener("change", () => { document.querySelector(".rate-result").innerHTML = b.value, a.setAttribute("data-rate-number", b.value) }, !1) }); let c = document.querySelector(".product-submit-comment--button"); c.addEventListener("click", async b => { b.stopPropagation(), b.preventDefault(), c.setAttribute("disabled", "disabled"); let d = c.getAttribute("data-id"), e = document.querySelector("textarea[name=\"description\"]").value, f = a.getAttribute("data-rate-number"); if (null === e || "" === e.trim()) { let a = document.querySelector(".error-comment-description"); return a.classList.remove("d-none"), a.innerHTML = "Fill out this field", !1 } let g = await ajaxLoader("POST", "/Comment/AddNewComment", `productId=${d}&description=${e}&rate=${f}`, errorHandling, function () { return window.scrollTo({ top: document.querySelector("#comment-and-details").offsetTop - 120, behavior: "smooth" }), UIkit.modal("#comment-add-modal").hide(), c.removeAttribute("disabled"), !0 }, null, !1); "101" === g ? UIkit.notification({ message: "<span class=\"margin-right-10 position-relative\" uk-icon=\"icon:bell;ratio:1.2\"></span><span class=\"dana-font fontsize-14\" dir=\"ltr\">Your comment submited</span>", status: "primary", pos: "top-center", timeout: 5e3 }) : "102" === g && UIkit.notification({ message: "<span class=\"margin-right-10 position-relative\" uk-icon=\"icon:bell;ratio:1.2\"></span><span class=\"dana-font fontsize-14\" dir=\"ltr\">Your review sumbited before</span>", status: "primary", pos: "top-center", timeout: 5e3 }) }, !1), document.querySelector(".add-new-comment").addEventListener("click", () => { c.removeAttribute("disabled"), document.querySelector("textarea[name=\"description\"]").value = null }, !1), document.querySelector("textarea[name=\"description\"]").addEventListener("focus", () => { let a = document.querySelector(".error-comment-description"); a.classList.add("d-none"), a.innerHTML = "", c.removeAttribute("disabled") }, !1) } async function addNewReplyComment() { let a = document.querySelector(".product-reply-comment-trigger"), b = document.querySelector(".product-submit-reply-comment--button"); return !!(a && b) && void (a.addEventListener("click", () => { let c = a.getAttribute("data-commentId"); b.setAttribute("data-commentId", c) }, !1), b.addEventListener("click", async a => { a.stopPropagation(), a.preventDefault(), b.setAttribute("disabled", "disabled"); let c = document.querySelector("textarea[name=\"replyDescription\"]").value; if (null === c || "" === c.trim()) { let a = document.querySelector(".error-reply-description"); return a.classList.remove("d-none"), a.innerHTML = "Fill out this field", !1 } let d = b.getAttribute("data-commentId"), e = await ajaxLoader("POST", "/Comment/AddReplyComment", `description=${c}&commentId=${d}`, errorHandling, function () { return window.scrollTo({ top: document.querySelector("#comment-and-details").offsetTop - 120, behavior: "smooth" }), UIkit.modal("#reply-comment-add-modal").hide(), b.removeAttribute("disabled"), !0 }, null, !1); "101" === e && UIkit.notification({ message: "<span class=\"margin-right-10 position-relative\" uk-icon=\"icon:bell;ratio:1.2\"></span><span class=\"dana-font fontsize-14\" dir=\"ltr\">Your comment submited</span>", status: "primary", pos: "top-center", timeout: 5e3 }) }, !1), a.addEventListener("click", () => { b.removeAttribute("disabled"), document.querySelector("textarea[name=\"replyDescription\"]").value = null }, !1), document.querySelector("textarea[name=\"replyDescription\"]").addEventListener("focus", () => { let a = document.querySelector(".error-reply-description"); a.classList.add("d-none"), a.innerHTML = "", b.removeAttribute("disabled") }, !1)) } let productDescriptionTrigger = document.querySelector("#product-description-trigger"); productDescriptionTrigger.addEventListener("click", async a => { a.preventDefault(); let b = productDescriptionTrigger.getAttribute("data-id"); await ajaxLoader("POST", "/Products/ProductDescription", `productId=${b}`, a => { console.log(a) }, () => (lazyLoading(), !0), "#product-main-content", !1) }, !1); let productDetailsTrigger = document.querySelector("#product-options-trigger"); productDetailsTrigger.addEventListener("click", async a => { a.preventDefault(); let b = productDescriptionTrigger.getAttribute("data-id"); await ajaxLoader("POST", "/Products/ProductOptions", `productId=${b}`, a => { console.log(a) }, () => !0, "#product-main-content", !1) }, !1); let productCommentsTrigger = document.querySelector("#product-comment-trigger"); productCommentsTrigger.addEventListener("click", async a => { a.preventDefault(); let b = productDescriptionTrigger.getAttribute("data-id"); await ajaxLoader("POST", "/Products/ProductCommentList", `productId=${b}`, a => { console.log(a) }, () => (productCommentsPagination(), addNewProductComment(), addNewReplyComment(), !0), "#product-main-content", !1) }, !1), function () { let a = document.querySelector(".go-to-comment"), b = document.querySelector("#comment-and-details"); a.addEventListener("click", a => { a.stopPropagation(), a.preventDefault(), window.scrollTo({ top: document.querySelector("#comment-and-details").offsetTop - 160, behavior: "smooth" }) }, !1) }(), async function () { let a = document.querySelector(".product-share-button-trigger"); a.addEventListener("click", a => { a.preventDefault(), a.stopPropagation(); let b = document.querySelectorAll(".product-share-button"); b.forEach(a => { a.classList.contains("product-share-button-active") ? (a.classList.add("product-share-button-disactive"), a.classList.remove("product-share-button-active"), setTimeout(() => { a.classList.remove("product-share-button-active"), a.classList.remove("product-share-button-disactive") }, 500)) : a.classList.add("product-share-button-active") }) }, !1); let b = document.querySelector(".copy-url-link"); b.addEventListener("click", a => { a.preventDefault(), a.stopPropagation(); let c = b.getAttribute("data-url"), d = document.createElement("INPUT"); d.value = c, d.style.opacity = 0, document.body.appendChild(d), d.select(), d.setSelectionRange(0, 99999), document.execCommand("copy"), d.remove() }, !1), b.addEventListener("mouseup", () => { b.setAttribute("uk-tooltip", "title:Link Copied;pos:right"), setTimeout(() => { UIkit.tooltip(b).show() }, 200) }, !1), b.addEventListener("mouseenter", () => { b.setAttribute("uk-tooltip", "title:Copy Link;pos:right"), UIkit.tooltip(b).show() }, !1) }(); function errorHandling(a) { console.log(a) }